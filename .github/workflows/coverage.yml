name: Coverage Badge

on:
  push:
    branches: [main]

# GitHub Pages deployment requires these permissions
permissions:
  contents: read   # so the job can checkout code
  pages: write     # must be write so the job can create a Pages deployment
  id-token: write  # needed so the job can request an OIDC token for the Pages API

jobs:
  coverage:
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin:latest
      options: --security-opt seccomp=unconfined

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install jq
        run: |
          apt-get update && apt-get install -y jq

      - name: Run cargo-tarpaulin
        id: coverage
        run: |
          cargo tarpaulin --workspace --out Json --output-dir coverage --timeout 120 --verbose --run-types Tests 2>&1 | tee tarpaulin_output.txt
          
          # Debug: show JSON structure
          echo "=== JSON file content ==="
          cat coverage/*.json
          echo "========================="
          
          # Check if percent_covered exists and is not null
          JSON_FILE=$(ls coverage/*.json | head -1)
          if jq -e '.percent_covered != null' "$JSON_FILE" > /dev/null 2>&1; then
            PCT=$(jq -r '.percent_covered | floor' "$JSON_FILE")
            echo "Parsed coverage from JSON: $PCT%"
          else
            echo "JSON percent_covered is null or missing, parsing from text output"
            PCT=$(grep -oP '\d+\.\d+(?=% coverage)' tarpaulin_output.txt | head -1 | cut -d. -f1)
            if [ -z "$PCT" ]; then
              echo "Could not parse coverage from text, defaulting to 0"
              PCT=0
            fi
            echo "Parsed coverage from text: $PCT%"
          fi
          
          echo "coverage=$PCT" >> "$GITHUB_OUTPUT"
          echo "Final coverage: $PCT%"

      - name: Generate coverage badge
        run: |
          pct=${{ steps.coverage.outputs.coverage }}
          # Choose color based on coverage percentage
          if [ "$pct" -lt 50 ]; then
            color="red"
          elif [ "$pct" -lt 70 ]; then
            color="orange"  
          elif [ "$pct" -lt 80 ]; then
            color="yellow"
          elif [ "$pct" -lt 90 ]; then
            color="yellowgreen"
          else
            color="brightgreen"
          fi

          # Generate SVG badge using shields.io
          curl -s "https://img.shields.io/badge/coverage-${pct}%25-${color}?style=flat-square" -o coverage.svg
          echo "Generated coverage badge: ${pct}% (${color})"

      - name: Deploy badge to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
          destination_dir: badges
          publish_branch: gh-pages
          keep_files: true
