name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

# GitHub Pages deployment requires these permissions
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.12.4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.16.0
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build VitePress docs
        run: pnpm run docs:build

      - name: Install jq for coverage
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-tarpaulin
        run: cargo install cargo-tarpaulin

      - name: Run coverage
        id: coverage
        run: |
          cargo tarpaulin --workspace --out Json --output-dir coverage --timeout 120 --verbose --run-types Tests 2>&1 | tee tarpaulin_output.txt

          # Parse coverage percentage
          JSON_FILE=$(ls coverage/*.json | head -1)
          if jq -e '.percent_covered != null' "$JSON_FILE" > /dev/null 2>&1; then
            PCT=$(jq -r '.percent_covered | floor' "$JSON_FILE")
            echo "Parsed coverage from JSON: $PCT%"
          else
            echo "JSON percent_covered is null or missing, parsing from text output"
            PCT=$(grep -oP '\d+\.\d+(?=% coverage)' tarpaulin_output.txt | head -1 | cut -d. -f1)
            if [ -z "$PCT" ]; then
              echo "Could not parse coverage from text, defaulting to 0"
              PCT=0
            fi
            echo "Parsed coverage from text: $PCT%"
          fi

          echo "coverage=$PCT" >> "$GITHUB_OUTPUT"
          echo "Final coverage: $PCT%"

      - name: Generate coverage badge
        run: |
          pct=${{ steps.coverage.outputs.coverage }}
          # Choose color based on coverage percentage
          if [ "$pct" -lt 50 ]; then
            color="red"
          elif [ "$pct" -lt 70 ]; then
            color="orange"  
          elif [ "$pct" -lt 80 ]; then
            color="yellow"
          elif [ "$pct" -lt 90 ]; then
            color="yellowgreen"
          else
            color="brightgreen"
          fi

          # Generate SVG badge using shields.io
          curl -s "https://img.shields.io/badge/coverage-${pct}%25-${color}?style=flat-square" -o coverage.svg
          echo "Generated coverage badge: ${pct}% (${color})"

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Create deployment directory
        run: |
          mkdir -p deploy/badges
          cp coverage.svg deploy/badges/
          cp -r docs/.vitepress/dist/* deploy/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: deploy
          name: github-pages

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Deployment Status
        run: |
          echo "‚úÖ Successfully deployed to GitHub Pages"
          echo "üìñ Documentation: https://naporin0624.github.io/mosaic-art-rust/"
          echo "üõ°Ô∏è Coverage badge: https://naporin0624.github.io/mosaic-art-rust/badges/coverage.svg"
